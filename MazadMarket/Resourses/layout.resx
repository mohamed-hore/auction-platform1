<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutus" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="aboutUsDescription" xml:space="preserve">
    <value>Attract, engage and convert more qualified Auction E-shoppers</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>ALsham Private Universiy</value>
  </data>
  <data name="appName" xml:space="preserve">
    <value>E-Auction</value>
  </data>
  <data name="approved" xml:space="preserve">
    <value>Is Approved</value>
  </data>
  <data name="cars" xml:space="preserve">
    <value>Cars</value>
  </data>
  <data name="categoryProductDetails" xml:space="preserve">
    <value>Category Product Details</value>
  </data>
  <data name="contactus" xml:space="preserve">
    <value>contact us</value>
  </data>
  <data name="copyRight" xml:space="preserve">
    <value />
  </data>
  <data name="dataOfAdd" xml:space="preserve">
    <value>Data Of Add</value>
  </data>
  <data name="dateOfAuctionEnd" xml:space="preserve">
    <value>Date Of Auction End</value>
  </data>
  <data name="dateOfAuctionStart" xml:space="preserve">
    <value>Date Of Auction Start</value>
  </data>
  <data name="dateOfRaise" xml:space="preserve">
    <value>Date of Raise</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="electrioics" xml:space="preserve">
    <value>Electrioics</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="lastAddedProduct" xml:space="preserve">
    <value>Last Added Product</value>
  </data>
  <data name="lastOfOurProduct" xml:space="preserve">
    <value>Last of our Product</value>
  </data>
  <data name="lastSoldProduct" xml:space="preserve">
    <value>Last Sold Product</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="market" xml:space="preserve">
    <value>Market</value>
  </data>
  <data name="maxPrice" xml:space="preserve">
    <value>Max Price :</value>
  </data>
  <data name="minimumRaise" xml:space="preserve">
    <value>Minimum Raise</value>
  </data>
  <data name="mission" xml:space="preserve">
    <value>OUR MISSION IS SIMPLE</value>
  </data>
  <data name="phoneNumner" xml:space="preserve">
    <value>+963 938 967 624</value>
  </data>
  <data name="primaryPrice" xml:space="preserve">
    <value>Primary Price</value>
  </data>
  <data name="productAuction" xml:space="preserve">
    <value>Product Auction</value>
  </data>
  <data name="productDescription" xml:space="preserve">
    <value>Our Products is The Number One in The Entire Market</value>
  </data>
  <data name="productDetailsDescription" xml:space="preserve">
    <value>The List of The Categorized Product </value>
  </data>
  <data name="productName" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="raise" xml:space="preserve">
    <value>Rasie</value>
  </data>
  <data name="raiseAmount" xml:space="preserve">
    <value>Raise Amount</value>
  </data>
  <data name="raiseList" xml:space="preserve">
    <value>Raise List</value>
  </data>
  <data name="register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="remarks" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="sold" xml:space="preserve">
    <value>State Of Product</value>
  </data>
  <data name="special" xml:space="preserve">
    <value>WHAT WE SPECIALIZE INWHAT WE SPECIALIZE IN</value>
  </data>
  <data name="typeName" xml:space="preserve">
    <value>Type Name</value>
  </data>
  <data name="userName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="mobile" xml:space="preserve">
    <value>mobile</value>
  </data>
  <data name="books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="buildings" xml:space="preserve">
    <value>Buildings</value>
  </data>
  <data name="clothes" xml:space="preserve">
    <value>Clothes</value>
  </data>
  <data name="foods" xml:space="preserve">
    <value>Foods</value>
  </data>
  <data name="usedItems" xml:space="preserve">
    <value>Used Items</value>
  </data>
  <data name="hello" xml:space="preserve">
    <value>Hello </value>
  </data>
  <data name="lang" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="addressMenuClass" xml:space="preserve">
    <value>right-none pull-right company_info</value>
  </data>
  <data name="loginMenuClass" xml:space="preserve">
    <value>left-none</value>
  </data>
  <data name="navBarMenuClass" xml:space="preserve">
    <value>nav navbar-nav pull-right</value>
  </data>
  <data name="dateOfAdd" xml:space="preserve">
    <value>Date of Add</value>
  </data>
  <data name="dateOfApprove" xml:space="preserve">
    <value>Date of Approve</value>
  </data>
  <data name="dateOfRise" xml:space="preserve">
    <value>Date of Rise</value>
  </data>
  <data name="dateOfSell" xml:space="preserve">
    <value>Date of Sell</value>
  </data>
  <data name="minRaise" xml:space="preserve">
    <value>Min Raise</value>
  </data>
  <data name="Picture" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProductsId" xml:space="preserve">
    <value />
  </data>
  <data name="ProductsTypeId" xml:space="preserve">
    <value>Products Type</value>
  </data>
  <data name="riseAmount" xml:space="preserve">
    <value>Rise Amount</value>
  </data>
  <data name="userId" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="backToList" xml:space="preserve">
    <value>back to List</value>
  </data>
  <data name="contactL1" xml:space="preserve">
    <value>One Microsoft Way</value>
  </data>
  <data name="contactL2" xml:space="preserve">
    <value>Redmond, WA 98052-6399</value>
  </data>
  <data name="contactL3" xml:space="preserve">
    <value>&lt;abbr title="Phone"&gt;P:&lt;/abbr&gt;
    425.555.0100</value>
  </data>
  <data name="createNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="dashBoard" xml:space="preserve">
    <value>Dash Board</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="deleteMessage" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="localaccount" xml:space="preserve">
    <value>Use a local account to log in.</value>
  </data>
  <data name="marketing" xml:space="preserve">
    <value>Marketing</value>
  </data>
  <data name="marketingMail" xml:space="preserve">
    <value>Marketing@mohamed.com</value>
  </data>
  <data name="missionP1" xml:space="preserve">
    <value>عندما ينقر الزائر على رابط صفحة “من نحن” فهو يمنحك فرصة الحديث معه لبضع ثوانٍ، لذلك ينبغي أن يكون حديثك مثيرا للاهتمام، وملفتا، تخيل أنك في اجتماع مع أحد العملاء لتقنعه بشراء المنتجات أو الخدمات التي تقدمها شركتك في وقت محدود، لتتمكن وبأفضل الطرق من:</value>
  </data>
  <data name="missionP2" xml:space="preserve">
    <value>الحديث عما يميزك عن غيرك ولِم أنت فريد من نوعك.
إعلام الجمهور بجميع الأنشطة المتعلقة بنشاطك التجاري.
الإجابة على الأسئلة التي يطرحونها، إجابة تلبي احتياجاتهم.
استعراض لمحات عن فريق عملك ومهاراتهم.</value>
  </data>
  <data name="missionP3" xml:space="preserve">
    <value>لا بد أن تكون الصفحة مُقنعة، بحيثُ تُظهِر لزوار الموقع مدى احترافية شركتك، ما يمنحك فرصة أكبر لتعزيز ثقة العملاء الحاليين، وتحويل الزوار إلى عملاء، وترك انطباع جيّد لدى المستثمرين، فما الذي سيجعل صفحة “من نحن” الخاصة بشركتك، صفحة رائعة ومثالية؟</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="registerNewUser" xml:space="preserve">
    <value>Register as a new user</value>
  </data>
  <data name="reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="rememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="sell" xml:space="preserve">
    <value>Sell</value>
  </data>
  <data name="support" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="supportMail" xml:space="preserve">
    <value>Support@example.com</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="bankAccountNumber" xml:space="preserve">
    <value>Bank Account Number</value>
  </data>
  <data name="cardExpirationDate" xml:space="preserve">
    <value>Card Expiration Date</value>
  </data>
  <data name="cCV" xml:space="preserve">
    <value>CCV</value>
  </data>
  <data name="depositValue" xml:space="preserve">
    <value>Deposit Value</value>
  </data>
  <data name="fullName" xml:space="preserve">
    <value>Full Name Owner</value>
  </data>
  <data name="limitPrice" xml:space="preserve">
    <value>Secret Price</value>
  </data>
  <data name="valueUP" xml:space="preserve">
    <value>Up Every Time</value>
  </data>
  <data name="visaCard" xml:space="preserve">
    <value>Visa Card</value>
  </data>
</root>